language: php

php:
    - '7.1'
    - '7.2'
    - '7.3'
    - '7.4'

env:
    - DEPENDENCIES=lowest
    - DEPENDENCIES=highest

git:
    autocrlf: input

cache:
    directories:
        - ~/.composer/cache

jobs:
    exclude:
        # symfony/console fails on "YamlStandards\Command\YamlCommandTest::testCorrectRunCommandForFix -> Trying to access array offset on value of type int" and I think it's not necessary fix it, so I skip it
        -   php: '7.4'
            env: DEPENDENCIES=lowest
    include:
        # build all symfony versions
        - { php: 7.1, env: [DEPENDENCIES=highest, SYMFONY_VERSION=^3.0] }
        - { php: 7.2, env: [DEPENDENCIES=highest, SYMFONY_VERSION=^3.0] }
        - { php: 7.3, env: [DEPENDENCIES=highest, SYMFONY_VERSION=^3.0] }
        - { php: 7.4, env: [DEPENDENCIES=highest, SYMFONY_VERSION=^3.0] }
        - { php: 7.1, env: [DEPENDENCIES=highest, SYMFONY_VERSION=^4.0.10] }
        - { php: 7.2, env: [DEPENDENCIES=highest, SYMFONY_VERSION=^4.0.10] }
        - { php: 7.3, env: [DEPENDENCIES=highest, SYMFONY_VERSION=^4.0.10] }
        - { php: 7.4, env: [DEPENDENCIES=highest, SYMFONY_VERSION=^4.0.10] }
        # I can't install composer for symfony 5 versions because shopsys/coding-standards blocked symplify/easy-coding-standard and he blocked symfony packages to max symfony 4 versions. At this moment it's not necessary to run builds for symfony 5 versions because I think it's working but in future, I want to resolve this
        # Windows
        - { name: 'PHP: 7.1', language: sh, os: windows, stage: Windows, env: [PHP_VERSION=7.1.31, DEPENDENCIES=lowest] }
        - { name: 'PHP: 7.1', language: sh, os: windows, stage: Windows, env: [PHP_VERSION=7.1.31, DEPENDENCIES=highest] }
        - { name: 'PHP: 7.2', language: sh, os: windows, stage: Windows, env: [PHP_VERSION=7.2.20, DEPENDENCIES=lowest] }
        - { name: 'PHP: 7.2', language: sh, os: windows, stage: Windows, env: [PHP_VERSION=7.2.20, DEPENDENCIES=highest] }
        - { name: 'PHP: 7.3', language: sh, os: windows, stage: Windows, env: [PHP_VERSION=7.3.8, DEPENDENCIES=lowest] }
        - { name: 'PHP: 7.3', language: sh, os: windows, stage: Windows, env: [PHP_VERSION=7.3.8, DEPENDENCIES=highest] }
        - { name: 'PHP: 7.4', language: sh, os: windows, stage: Windows, env: [PHP_VERSION=7.4.1, DEPENDENCIES=highest] }
        # OSX
        - { name: 'PHP: 7.1', language: sh, os: osx, stage: OSX, env: [PHP_VERSION=7.1, DEPENDENCIES=lowest], addons: { homebrew: { packages: [composer], update: true } } }
        - { name: 'PHP: 7.1', language: sh, os: osx, stage: OSX, env: [PHP_VERSION=7.1, DEPENDENCIES=highest], addons: { homebrew: { packages: [composer], update: true } } }
        - { name: 'PHP: 7.2', language: sh, os: osx, stage: OSX, env: [PHP_VERSION=7.2, DEPENDENCIES=lowest], addons: { homebrew: { packages: [composer], update: true } } }
        - { name: 'PHP: 7.2', language: sh, os: osx, stage: OSX, env: [PHP_VERSION=7.2, DEPENDENCIES=highest], addons: { homebrew: { packages: [composer], update: true } } }
        # build for PHP 7.3 is skipped because it's error in PHP https://bugs.php.net/bug.php?id=77260 'preg_match(): JIT compilation failed: no more memory in phar' and I don't know how to fix it
        - { name: 'PHP: 7.4', language: sh, os: osx, stage: OSX, env: [PHP_VERSION=7.4, DEPENDENCIES=highest], addons: { homebrew: { packages: [composer], update: true } } }

install:
    - |
        if [ $TRAVIS_OS_NAME = osx ]; then
            curl -s http://php-osx.liip.ch/install.sh | bash -s ${PHP_VERSION}
            export PATH=/usr/local/php5/bin:$PATH
        fi;

before_script:
    - |
        if [ $TRAVIS_OS_NAME = windows ]; then
            # install php
            choco install php --version ${PHP_VERSION} --package-parameters='"/InstallDir:C:\php"'
            export PATH=/c/php:$PATH

            # Enable extensions
            PHP_EXTENSIONS="openssl mbstring curl"
            for php_ext in $PHP_EXTENSIONS ; do sed -i -e "s/^;extension=${php_ext}/extension=${php_ext}/" /c/php/php.ini ; done
            # PHP 7.1 has name of extensions different as other higher versions
            for php_ext in $PHP_EXTENSIONS ; do sed -i -e "s/^;extension=php_${php_ext}/extension=php_${php_ext}/" /c/php/php.ini ; done

            # install composer
            choco install composer
            export PATH=/c/ProgramData/ComposerSetup/bin:$PATH
        fi;
    - composer self-update
    - if [[ "${SYMFONY_VERSION}" != "" ]]; then composer require --no-update "symfony/console:${SYMFONY_VERSION}" "symfony/config:${SYMFONY_VERSION}" "symfony/yaml:${SYMFONY_VERSION}"; fi;
    - if [ "${DEPENDENCIES}" = "lowest" ]; then composer update --prefer-lowest; fi;
    - if [ "${DEPENDENCIES}" = "highest" ]; then composer update; fi;

script:
    - vendor/bin/phing build-ci
