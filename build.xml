<?xml version="1.0" encoding="UTF-8"?>
<project name="Yaml standards" default="build">

    <property name="path.bin" value="${path.root}/vendor/bin"/>
    <property name="path.composer.executable" value="composer"/>
    <property name="path.php.executable" value="php"/>
    <property name="path.phpcbf.executable" value="${path.bin}/phpcbf"/>
    <property name="path.phpcs.executable" value="${path.bin}/phpcs"/>
    <property name="path.phpcs.ruleset" value="${path.vendor}/shopsys/coding-standards/rulesetCS.xml"/>
    <property name="path.phpcs-fixer.executable" value="${path.bin}/php-cs-fixer"/>
    <property name="path.phpcs-fixer.configuration" value="${path.vendor}/shopsys/coding-standards/build/phpcs-fixer.php_cs"/>
    <property name="path.phplint.executable" value="${path.bin}/parallel-lint"/>
    <property name="path.phpmd.executable" value="${path.bin}/phpmd"/>
    <property name="path.phpmd.ruleset" value="${path.vendor}/shopsys/coding-standards/rulesetMD.xml"/>
    <property name="path.phpunit.executable" value="${path.bin}/phpunit"/>
    <property name="path.root" value="."/>
    <property name="path.src" value="${path.root}/src"/>
    <property name="path.tests" value="${path.root}/tests"/>
    <property name="path.vendor" value="${path.root}/vendor"/>

    <target name="build" description="Builds application">
        <exec
                executable="${path.composer.executable}"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg value="install" />
        </exec>
    </target>
    <target name="build-ci" depends="standards, tests-unit" description="Run build commands on CI."/>

    <target name="standards" depends="phplint,phpcs-fixer,phpcs,phpmd" description="Checks coding standards."/>
    <target name="standards-diff" depends="phplint-diff,phpcs-fixer-diff,phpcs-diff,phpmd-diff" description="Checks coding standards on changed files."/>
    <target name="standards-fix" description="Automatically fixes some coding standards violations in all files.">
        <phingcall target="phpcs-fixer-fix" />
        <trycatch>
            <try>
                <phingcall target="phpcs" />
            </try>
            <catch>
                <phingcall target="phpcbf" />
            </catch>
        </trycatch>
    </target>
    <target name="standards-fix-diff" description="Automatically fixes some coding standards violations in changed files.">
        <phingcall target="phpcs-fixer-fix-diff" />
        <trycatch>
            <try>
                <phingcall target="phpcs-diff" />
            </try>
            <catch>
                <phingcall target="phpcbf-diff" />
            </catch>
        </trycatch>
    </target>

    <target name="diff-files" description="Finds changed files (against origin/master) and saves them into properties.">
        <exec
                command="git merge-base origin/master HEAD"
                outputProperty="git.merge.base"
        />

        <exec
                command="git diff --name-only --diff-filter=ACMR ${git.merge.base} ${path.src} ${path.tests}"
                outputProperty="git.files.changed"
        />

        <exec
                command="git ls-files --others --exclude-standard ${path.src} ${path.tests}"
                outputProperty="git.files.unstaged"
        />

        <property name="diff.files.all" value="${git.files.changed}${line.separator}${git.files.unstaged}">
            <filterchain>
                <linecontainsregexp>
                        <regexp pattern="^.+$" />
                </linecontainsregexp>
            </filterchain>
        </property>

        <property name="diff.files.php" value="${diff.files.all}">
            <filterchain>
                <linecontainsregexp>
                    <!-- linecontainsregexp splits lines using \n, so string can end with whitespace -->
                    <regexp pattern="\.php\s*$" />
                </linecontainsregexp>
            </filterchain>
        </property>

        <property name="diff.files.all.spaces" value="${diff.files.all}">
            <filterchain>
                <replaceregexp>
                    <regexp pattern="[\r\n]+" replace=" " />
                </replaceregexp>
            </filterchain>
        </property>

        <property name="diff.files.php.spaces" value="${diff.files.php}">
            <filterchain>
                <replaceregexp>
                    <regexp pattern="[\r\n]+" replace=" " />
                </replaceregexp>
            </filterchain>
        </property>

        <property name="diff.files.php.commas" value="${diff.files.php}">
            <filterchain>
                <replaceregexp>
                    <regexp pattern="[\r\n]+" replace="," />
                    <regexp pattern="^,|,$" replace="" />
                </replaceregexp>
            </filterchain>
        </property>
    </target>


    <target name="phpcbf" description="Fixes coding standards violations in all files by PHP Code Beautifier.">
        <exec
                executable="${path.phpcbf.executable}"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg value="--standard=${path.phpcs.ruleset}"/>
            <arg value="--extensions=php"/>
            <arg value="--encoding=utf-8"/>
            <arg value="--tab-width=4"/>
            <arg value="--no-patch"/>
            <arg path="${path.src}"/>
            <arg path="${path.tests}"/>
        </exec>
    </target>

    <target name="phpcbf-diff" depends="diff-files" description="Fixes coding standards violations in changed files by PHP Code Beautifier.">
        <if>
            <not>
                <equals arg1="${diff.files.php.spaces}" arg2="" trim="true" />
            </not>
            <then>
                <exec
                        executable="${path.phpcbf.executable}"
                        logoutput="true"
                        passthru="true"
                        checkreturn="true"
                >
                    <arg value="--standard=${path.phpcs.ruleset}"/>
                    <arg value="--extensions=php"/>
                    <arg value="--encoding=utf-8"/>
                    <arg value="--tab-width=4"/>
                    <arg value="--no-patch"/>
                    <arg line="${diff.files.php.spaces}"/>
                </exec>
            </then>
        </if>
    </target>

    <target name="phpcs" description="Checks coding standards in all files by PHP Code Sniffer.">
        <exec
                executable="${path.phpcs.executable}"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg value="--standard=${path.phpcs.ruleset}"/>
            <arg value="--extensions=php"/>
            <arg value="--encoding=utf-8"/>
            <arg value="--tab-width=4"/>
            <arg value="-sp"/>
            <arg path="${path.src}"/>
            <arg path="${path.tests}"/>
        </exec>
    </target>

    <target name="phpcs-diff" depends="diff-files" description="Checks coding standards in changed files by PHP Code Sniffer.">
        <if>
            <not>
                <equals arg1="${diff.files.php.spaces}" arg2="" trim="true" />
            </not>
            <then>
                <exec
                        executable="${path.phpcs.executable}"
                        logoutput="true"
                        passthru="true"
                        checkreturn="true"
                >
                    <arg value="--standard=${path.phpcs.ruleset}"/>
                    <arg value="--extensions=php"/>
                    <arg value="--encoding=utf-8"/>
                    <arg value="--tab-width=4"/>
                    <arg value="-sp"/>
                    <arg line="${diff.files.php.spaces}"/>
                </exec>
            </then>
        </if>
    </target>

    <target name="phpcs-fixer" description="Checks coding standards in all files by PHP CS Fixer.">
        <exec
                executable="${path.phpcs-fixer.executable}"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg value="fix" />
            <arg value="--config=${path.phpcs-fixer.configuration}" />
            <arg value="--dry-run" />
            <arg value="--verbose" />
            <arg value="--diff" />
            <arg path="${path.src}" />
            <arg path="${path.tests}" />
        </exec>
    </target>

    <target name="phpcs-fixer-fix" description="Fixes coding standards violations in all files by PHP CS Fixer.">
        <exec
                executable="${path.phpcs-fixer.executable}"
                logoutput="true"
                passthru="true"
                checkreturn="false"
        >
            <arg value="fix" />
            <arg value="--config=${path.phpcs-fixer.configuration}" />
            <arg value="--verbose" />
            <arg path="${path.src}" />
            <arg path="${path.tests}" />
        </exec>
    </target>

    <target name="phpcs-fixer-diff" depends="diff-files" description="Checks coding standards in changed files by PHP CS Fixer.">
        <if>
            <not>
                <equals arg1="${diff.files.all.spaces}" arg2="" trim="true" />
            </not>
            <then>
                <exec
                        executable="${path.phpcs-fixer.executable}"
                        logoutput="true"
                        passthru="true"
                        checkreturn="true"
                >
                    <arg value="fix" />
                    <arg value="--config=${path.phpcs-fixer.configuration}" />
                    <arg value="--dry-run" />
                    <arg value="--verbose" />
                    <arg value="--diff" />
                    <arg line="${diff.files.all.spaces}"/>
                </exec>
            </then>
        </if>
    </target>

    <target name="phpcs-fixer-fix-diff" depends="diff-files" description="Fixes coding standards violations in changed files by PHP CS Fixer.">
        <if>
            <not>
                <equals arg1="${diff.files.all.spaces}" arg2="" trim="true" />
            </not>
            <then>
                <exec
                        executable="${path.phpcs-fixer.executable}"
                        logoutput="true"
                        passthru="true"
                        checkreturn="true"
                >
                    <arg value="fix" />
                    <arg value="--config=${path.phpcs-fixer.configuration}" />
                    <arg value="--verbose" />
                    <arg value="--diff" />
                    <arg line="${diff.files.all.spaces}"/>
                </exec>
            </then>
        </if>
    </target>

    <target name="phplint" description="Checks syntax of PHP files.">
        <exec
                executable="${path.phplint.executable}"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg path="${path.src}"/>
            <arg path="${path.tests}" />
        </exec>
    </target>

    <target name="phplint-diff" depends="diff-files" description="Checks syntax of changed PHP files.">
        <if>
            <not>
                <equals arg1="${diff.files.php.spaces}" arg2="" trim="true" />
            </not>
            <then>
                <exec
                        executable="${path.phplint.executable}"
                        logoutput="true"
                        passthru="true"
                        checkreturn="true"
                >
                    <arg line="${diff.files.php.spaces}" />
                </exec>
            </then>
        </if>
    </target>

    <target name="phpmd" description="Checks coding standards in all files by PHP Mess Detector.">
        <exec
                executable="${path.phpmd.executable}"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg value="${path.src},${path.tests}"/>
            <arg value="text"/>
            <arg value="${path.phpmd.ruleset}"/>
            <arg value="--extensions=php"/>
            <arg value="--exclude"/>
        </exec>
    </target>

    <target name="phpmd-diff" depends="diff-files" description="Checks coding standards in changed files by PHP Mess Detector.">
        <if>
            <not>
                <equals arg1="${diff.files.php.commas}" arg2="" trim="true" />
            </not>
            <then>
                <exec
                        executable="${path.phpmd.executable}"
                        logoutput="true"
                        passthru="true"
                        checkreturn="true"
                >
                    <arg value="${diff.files.php.commas}"/>
                    <arg value="text"/>
                    <arg value="${path.phpmd.ruleset}"/>
                    <arg value="--extensions=php"/>
                    <arg value="--exclude"/>
                </exec>
            </then>
        </if>
    </target>

    <target name="tests-unit" description="Runs unit tests.">
        <exec
                executable="${path.phpunit.executable}"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg value="--colors=always"/>
            <arg value="--testsuite"/>
            <arg value="Unit"/>
        </exec>
    </target>

</project>
