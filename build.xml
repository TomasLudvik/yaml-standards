<?xml version="1.0" encoding="UTF-8"?>
<project name="Yaml standards" default="list">

    <property name="path.bin" value="${path.root}/vendor/bin"/>
    <property name="path.composer.executable" value="composer"/>
    <property name="path.ecs.executable" value="${path.bin}/ecs"/>
    <property name="path.php.executable" value="php"/>
    <property name="path.phplint.executable" value="${path.bin}/parallel-lint"/>
    <property name="path.phpstan.executable" value="${path.bin}/phpstan"/>
    <property name="path.phpunit.executable" value="${path.bin}/phpunit"/>
    <property name="path.root" value="."/>
    <property name="path.src" value="${path.root}/src"/>
    <property name="path.tests" value="${path.root}/tests"/>
    <property name="path.vendor" value="${path.root}/vendor"/>

    <target name="build-ci" depends="standards, tests-unit" description="Run build commands on CI."/>

    <target name="standards" depends="phplint,ecs,phpstan" description="Checks coding standards."/>
    <target name="standards-diff" depends="phplint-diff,ecs-diff,phpstan" description="Checks coding standards in changed files."/>
    <target name="standards-fix" depends="ecs-fix" description="Automatically fixes *some* coding standards violations in all files. Always run 'standards' to be sure there are no further violations."/>
    <target name="standards-fix-diff" depends="ecs-fix-diff" description="Automatically fixes *some* coding standards violations in changed files. Always run 'standards' to be sure there are no further violations."/>

    <target name="diff-files" description="Finds changed files (against origin/master) and saves them into properties." hidden="true">
        <exec executable="git" outputProperty="git.status.output" returnProperty="git.status.returnCode">
            <arg value="status"/>
        </exec>
        <if>
            <not>
                <equals arg1="${git.status.returnCode}" arg2="0"/>
            </not>
            <then>
                <echo level="error" message="Searching for changed files requires Git to be installed and the .git directory to be available."/>
                <echo level="info" message="By default, the .git directory is excluded from synchronization of files using docker-sync on Windows and Mac in order to deliver better performance and stability."/>
                <echo level="info" message="If that's your case, either remove '.git' from 'sync_excludes' in your 'docker-sync.yml' or use the target without the '-diff' suffix."/>
                <fail message="${git.status.output}"/>
            </then>
        </if>

        <exec executable="git" outputProperty="git.merge.base">
            <arg value="merge-base"/>
            <arg value="origin/master"/>
            <arg value="HEAD"/>
        </exec>

        <exec executable="git" outputProperty="git.files.changed">
            <arg value="diff"/>
            <arg value="--name-only"/>
            <arg value="--diff-filter=ACMR"/>
            <arg value="${git.merge.base}"/>
            <arg path="${path.src}"/>
            <arg path="${path.tests}"/>
        </exec>

        <exec executable="git" outputProperty="git.files.unstaged">
            <arg value="ls-files"/>
            <arg value="--others"/>
            <arg value="--exclude-standard"/>
            <arg path="${path.src}"/>
            <arg path="${path.tests}"/>
        </exec>

        <property name="diff.files.all" value="${git.files.changed}${line.separator}${git.files.unstaged}">
            <filterchain>
                <linecontainsregexp>
                    <regexp pattern="^.+$" />
                </linecontainsregexp>
            </filterchain>
        </property>

        <property name="diff.files.php" value="${diff.files.all}">
            <filterchain>
                <linecontainsregexp>
                    <!-- linecontainsregexp splits lines using \n, so string can end with whitespace -->
                    <regexp pattern="\.php\s*$"/>
                </linecontainsregexp>
            </filterchain>
        </property>

        <property name="diff.files.all.spaces" value="${diff.files.all}">
            <filterchain>
                <replaceregexp>
                    <regexp pattern="[\r\n]+" replace=" "/>
                </replaceregexp>
            </filterchain>
        </property>

        <property name="diff.files.php.spaces" value="${diff.files.php}">
            <filterchain>
                <replaceregexp>
                    <regexp pattern="[\r\n]+" replace=" "/>
                </replaceregexp>
            </filterchain>
        </property>

        <property name="diff.files.php.commas" value="${diff.files.php}">
            <filterchain>
                <replaceregexp>
                    <regexp pattern="[\r\n]+" replace=","/>
                    <regexp pattern="^,|,$" replace=""/>
                </replaceregexp>
            </filterchain>
        </property>
    </target>

    <target name="ecs" description="Checks coding standards in all files by PHP easy coding standards." hidden="true">
        <exec executable="${path.ecs.executable}" logoutput="true" passthru="true" checkreturn="true">
            <arg value="check"/>
            <arg value="--clear-cache"/>
            <arg path="${path.src}"/>
            <arg path="${path.tests}"/>
            <arg path="${path.root}/CHANGELOG.md"/>
            <arg path="${path.root}/README.md"/>
            <arg path="${path.root}/.github/PULL_REQUEST_TEMPLATE.md"/>
            <arg path="${path.root}/.github/ISSUE_TEMPLATE/1_Bug_report.md"/>
            <arg path="${path.root}/.github/ISSUE_TEMPLATE/2_Feature_request.md"/>
        </exec>
    </target>

    <target name="ecs-diff" description="Checks coding standards in changed files by PHP easy coding standards." hidden="true">
        <exec executable="${path.ecs.executable}" logoutput="true" passthru="true" checkreturn="true">
            <arg value="check"/>
            <arg path="${path.src}"/>
            <arg path="${path.tests}"/>
            <arg path="${path.root}/CHANGELOG.md"/>
            <arg path="${path.root}/README.md"/>
            <arg path="${path.root}/.github/PULL_REQUEST_TEMPLATE.md"/>
            <arg path="${path.root}/.github/ISSUE_TEMPLATE/1_Bug_report.md"/>
            <arg path="${path.root}/.github/ISSUE_TEMPLATE/2_Feature_request.md"/>
        </exec>
    </target>

    <target name="ecs-fix" description="Checks and fixes automatically fixable coding standards in all files by PHP easy coding standards." hidden="true">
        <exec executable="${path.ecs.executable}" logoutput="true" passthru="true" checkreturn="true">
            <arg value="check"/>
            <arg value="--clear-cache"/>
            <arg value="--fix"/>
            <arg path="${path.src}"/>
            <arg path="${path.tests}"/>
            <arg path="${path.root}/CHANGELOG.md"/>
            <arg path="${path.root}/README.md"/>
            <arg path="${path.root}/.github/PULL_REQUEST_TEMPLATE.md"/>
            <arg path="${path.root}/.github/ISSUE_TEMPLATE/1_Bug_report.md"/>
            <arg path="${path.root}/.github/ISSUE_TEMPLATE/2_Feature_request.md"/>
        </exec>
    </target>

    <target name="ecs-fix-diff" description="Checks and fixes automatically fixable coding standards in changed files by PHP easy coding standards." hidden="true">
        <exec executable="${path.ecs.executable}" logoutput="true" passthru="true" checkreturn="true">
            <arg value="check"/>
            <arg value="--fix"/>
            <arg path="${path.src}"/>
            <arg path="${path.tests}"/>
            <arg path="${path.root}/CHANGELOG.md"/>
            <arg path="${path.root}/README.md"/>
            <arg path="${path.root}/.github/PULL_REQUEST_TEMPLATE.md"/>
            <arg path="${path.root}/.github/ISSUE_TEMPLATE/1_Bug_report.md"/>
            <arg path="${path.root}/.github/ISSUE_TEMPLATE/2_Feature_request.md"/>
        </exec>
    </target>

    <target name="list" description="Hidden target to make Phing list all targets when called without an argument." hidden="true">
        <exec executable="${path.php.executable}" passthru="true" checkreturn="true">
            <arg value="phing"/>
            <arg value="-l"/>
        </exec>
    </target>

    <target name="phpstan" description="Performs static analysis of PHP files using PHPStan." hidden="true">
        <exec executable="${path.phpstan.executable}" logoutput="true" passthru="true" checkreturn="true">
            <arg value="analyze"/>

            <arg path="${path.src}"/>
            <arg path="${path.tests}"/>

            <arg value="-vvv"/>
        </exec>
    </target>

    <target name="phplint" description="Checks syntax of PHP files." hidden="true">
        <exec executable="${path.phplint.executable}" logoutput="true" passthru="true" checkreturn="true">
            <arg path="${path.src}"/>
            <arg path="${path.tests}"/>
        </exec>
    </target>

    <target name="phplint-diff" depends="diff-files" description="Checks syntax of changed PHP files." hidden="true">
        <if>
            <not>
                <equals arg1="${diff.files.php.spaces}" arg2="" trim="true"/>
            </not>
            <then>
                <exec executable="${path.phplint.executable}" logoutput="true" passthru="true" checkreturn="true">
                    <arg line="${diff.files.php.spaces}"/>
                </exec>
            </then>
        </if>
    </target>

    <target name="tests-unit" description="Runs unit tests.">
        <exec
                executable="${path.phpunit.executable}"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg value="--colors=always"/>
            <arg value="--testsuite"/>
            <arg value="Unit"/>
        </exec>
    </target>
</project>
